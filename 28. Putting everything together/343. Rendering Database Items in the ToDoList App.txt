Rendering Database Items in the ToDoList App
============================================


- mongoose find()
<model_name>.find({conditions}, function(err) {
  //use the found results to docs 
})

challenge:
log all of the items inside our items collection 
from app.js 

solution:
app.get("/", function (req, res) {
  Item.find({}, function (err, foundItems) {
    if (err) {
      console.log(err);
    } else {
      res.render("list", { listTitle: "Today", newListItems: foundItems });
    }
  });
});

note:
if we hit "rs" in our terminal that runs 
nodemon app.js, then it will add many more 
items into display (iterating the earlier ones)

- to show only the name in your document:
<div class="item">
        <input type="checkbox">
        <p><%=  newListItems[i].name  %></p>
      </div>

note:
add ".name" there 

challenge:
change the traditional for loop here using the  
forEach one instead!

solution:
<% newListItems.forEach(function(item) { %>
  <div class="item">
    <input type="checkbox" />
    <p><%= item.name %></p>
  </div>
  <% }) %>

- we're only gonna add the default items if 
those default items do not exist!

first, we're gonna clear our database

then

we can check whether our items is empty or 
if the array has no items:

app.get("/", function (req, res) {
  Item.find({}, function (err, foundItems) {
    if (err) {
      console.log(err);
    } else {
      if (foundItems.length === 0) {
        //inserting our items into mongoose

        Item.insertMany(defaultItems, function (err) {
          if (err) {
            console.log(err);
          } else {
            console.log("Successfully inserted datas into database!");
          }
        });
        //don't forget this to make you to to the else statement after this if is done
        res.redirect("/");
      } else {
        res.render("list", { listTitle: "Today", newListItems: foundItems });
      }
    }
  });
});


full final code:
//jshint esversion:6

const express = require("express");
const bodyParser = require("body-parser");
const mongoose = require("mongoose");

const app = express();

app.set("view engine", "ejs");

app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static("public"));

//create a new database using mongoose
mongoose.connect("mongodb://localhost:27017/todolistDB", {
  useNewUrlParser: true,
});

//create todolist schema
const itemsSchema = new mongoose.Schema({
  name: String,
});

//create todolist model
const Item = mongoose.model("Item", itemsSchema);

//create the default documents
const item1 = new Item({ name: "Welcome to your todo list!" });

const item2 = new Item({ name: "Hit the + button to aff a new item." });

const item3 = new Item({ name: "<-- Hit this to delete an item" });

const defaultItems = [item1, item2, item3];

const workItems = [];

app.get("/", function (req, res) {
  Item.find({}, function (err, foundItems) {
    if (err) {
      console.log(err);
    } else {
      if (foundItems.length === 0) {
        //inserting our items into mongoose

        Item.insertMany(defaultItems, function (err) {
          if (err) {
            console.log(err);
          } else {
            console.log("Successfully inserted datas into database!");
          }
        });
        res.redirect("/");
      } else {
        res.render("list", { listTitle: "Today", newListItems: foundItems });
      }
    }
  });
});

app.post("/", function (req, res) {
  const item = req.body.newItem;

  if (req.body.list === "Work") {
    workItems.push(item);
    res.redirect("/work");
  } else {
    items.push(item);
    res.redirect("/");
  }
});

app.get("/work", function (req, res) {
  res.render("list", { listTitle: "Work List", newListItems: workItems });
});

app.get("/about", function (req, res) {
  res.render("about");
});

app.listen(3000, function () {
  console.log("Server started on port 3000");
});
